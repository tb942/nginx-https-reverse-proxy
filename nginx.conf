
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile  on;

    gzip  on;

    server {
        listen 192.168.0.192:443 ssl;
        server_name portainer.lan;

        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
        ssl_certificate     /run/secrets/portainer_cert;
        ssl_certificate_key /run/secrets/portainer_key;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        location / {
            proxy_pass http://portainer:9000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
    }

    server {
        listen 192.168.0.192:80;
        server_name portainer.lan;
        return 301 https://portainer.lan$request_uri;
    }

    server {
        listen 192.168.0.192:443 ssl;
        server_name speed.lan;

        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
        ssl_certificate     /run/secrets/speed_cert;
        ssl_certificate_key /run/secrets/speed_key;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        location / {
            proxy_pass http://grafana:3000;
            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }

    server {
        listen 192.168.0.192:80;
        server_name speed.lan;
        return 301 https://speed.lan$request_uri;
    }

    server {
        listen 192.168.0.192:80 default_server;
        # Drop http connections sent to an unexpected/missing server name
        return 444;
    }
}
